Words - count:

#include - 4
<stdio.h> - 1
<stdlib.h> - 1
<string.h> - 1
<ctype.h> - 1
#define - 1
LINE_LEN - 1
2048 - 1
typedef - 1
struct - 2
Node - 2
{ - 21
// - 12
узел - 1
в - 4
списке - 1
char - 7
* - 29
string; - 1
next; - 3
int - 5
rep; - 1
} - 25
WORD; - 1
WORD - 8
in - 3
(); - 2
ввод - 2
слов - 2
void - 6
append(WORD - 2
** - 2
, - 3
); - 4
добавление - 1
слова - 1
список - 2
List(WORD - 2
FILE - 3
вывод - 1
из - 1
списка - 1
файл - 3
delete(WORD - 2
удаление - 1
узлов - 1
repeat(WORD - 2
есть - 1
ли - 1
слово - 1
списке? - 1
main(int - 1
argc, - 1
argv[]) - 1
words - 2
= - 26
NULL; - 5
f; - 1
f - 1
fopen(argv[1], - 1
"w"); - 1
создаём - 1
или - 1
открываем - 1
с - 1
функцией - 1
записи - 1
if - 10
(argc - 1
< - 1
2) - 1
printf("Incorrect - 1
number - 1
of - 1
arguments.\n"); - 1
exit(-1); - 4
(words){ - 1
List(words, - 1
f); - 1
printf("\n\033[33mFile - 1
%s - 1
is - 1
complete.\n", - 1
argv[1]); - 1
fclose(f); - 1
закрываем - 1
delete(words); - 1
удаляем - 1
() - 1
head - 3
j - 2
0, - 1
c; - 2
line[LINE_LEN], - 1
elem; - 1
while - 3
((c - 1
getchar()) - 1
!= - 7
EOF) - 1
символов - 1
(c - 1
' - 2
&& - 2
iscntrl(c) - 1
== - 7
0) - 4
line[j++] - 1
else - 2
line[j] - 2
'\0'; - 2
0; - 2
(strlen(line) - 1
continue; - 1
пустую - 1
строку - 1
не - 1
обрабатываем! - 1
if(repeat(head, - 2
line)){ - 2
((elem - 2
(char - 2
*) - 2
malloc(strlen(line))) - 2
NULL) - 5
printf("NOT - 3
ENOUGH - 3
MEMORY!\n"); - 3
strcpy(elem, - 2
line); - 2
append(&head, - 2
elem); - 2
(j - 1
> - 1
0 - 1
strlen(line) - 1
проверка - 1
на - 1
содержимое - 1
буфера - 1
return - 3
head; - 3
headRef, - 2
line) - 3
p; - 4
for - 2
(p - 3
headRef; - 2
p - 14
-> - 14
next) - 2
(strcmp(p - 1
string, - 2
rep - 2
+= - 1
1; - 2
newWord, - 1
((newWord - 1
(WORD - 1
) - 1
malloc(sizeof(WORD))) - 1
newWord - 3
1, - 1
string - 1
line, - 1
next - 4
(* - 1
headRef - 2
newWord; - 2
head, - 1
f) - 1
fprintf(f, - 2
"Words - 1
- - 2
count:\n\n"); - 1
"%s - 1
%d\n", - 1
rep); - 1
head) - 1
(head - 1
NULL){ - 1
free(p->string); - 1
free(p); - 1
